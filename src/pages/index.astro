---
export const prerender = true;

import { builder, type BuilderContent } from "@builder.io/sdk";
import { DOMAIN_NAME } from "../consts/site";
import GalleryLayout from "../layouts/GalleryLayout.astro";
import ResponsivePicture from "../components/ResponsivePicture.astro";
import JsonLdConceptArt from "../components/JsonLdConceptArt.astro";

const PROJECT_MODEL_ID = "gallery";
const BUILDER_API_KEY = import.meta.env.BUILDER_API_PUBLIC_KEY;

const url = `https://${DOMAIN_NAME}/`;
const entry: BuilderContent = await builder.get(PROJECT_MODEL_ID, {
  url: `/index`,
  cachebust: true,
  apiKey: BUILDER_API_KEY,
});
---

<GalleryLayout
  title={entry?.data?.title ?? ""}
  description={entry?.data?.description ?? ""}
  image={entry?.data?.image ?? ""}
  {url}
>
  <main>
    <div class="gallery">
      {
        (entry.data?.blocks ?? [])
          .filter((block) => block["@type"] === "@builder.io/sdk:Element")
          .map((block) => {
            switch (block?.component?.name?.toLowerCase()) {
              case "image":
                console.log(block);
                const link = block?.properties?.href ?? "#";
                const description = block?.properties?.description ?? "";
                const options = block?.component?.options ?? {};
                return (
                  <>
                    <a href={link}>
                      <figure>
                        <ResponsivePicture
                          src={options.image}
                          title={options.altText}
                          alt={options.altText}
                          width={options.width}
                          height={options.height}
                          loading={options.lazy ? "lazy" : "eager"}
                          fetchpriority={"high"}
                          placeholder={"blur"}
                          size={2}
                        />
                        <figcaption>
                          <h1>{options.altText}</h1>
                          <p>{description}</p>
                        </figcaption>
                      </figure>
                    </a>
                    <JsonLdConceptArt
                      name={options.altText}
                      image={options.image}
                      {description}
                    />
                  </>
                );
            }
          })
      }
    </div>
  </main>
</GalleryLayout>
