---
import Icon from "astro-icon";
import {
  ElementTag,
  type ImageMetadata,
  type VideoMetadata,
} from "../types/ElementMetadata";
import ResponsivePicture from "./ResponsivePicture.astro";

interface Props {
  index: number;
  element: ImageMetadata | VideoMetadata;
  links: string[];
}

const { index, element, links } = Astro.props;

const currLink = links[index] ?? ""
const prevLink = links[Math.max(index - 1, 0)] ?? ""
const nextLink = links[Math.min(index + 1, links.length - 1)] ?? ""
---

<div>
  <div class="presentation" id={`gallery-${currLink}`}>
    <div class="presentation__inner">
      <a
        class="presentation__close"
        href={`#${currLink}`}
        aria-label={`Exit presentation mode to ${element.title}`}
      >
        <Icon
          pack="mdi"
          name="close"
          class="presentation__icon"
          width="2.25rem"
          color="#111111dd"
          style="background:#ffffff99;"
          aria-hidden="true"
        />
      </a>
      <div class="presentation__asset">
        {
          () => {
            switch (element.tag) {
              case ElementTag.IMG:
                return (
                  <ResponsivePicture
                    src={element.src}
                    title={element.title}
                    alt={element.alt}
                    width={element.originalWidth}
                    height={element.originalHeight}
                    loading={"lazy"}
                    fetchpriority={"auto"}
                    placeholder={"blur"}
                    size={3}
                  />
                );
              case ElementTag.VIDEO:
                return (
                  <video
                    poster={element.poster}
                    title={element.title}
                    playsinline={true}
                    autoplay={element.autoplay}
                    loop={element.loop}
                    controls={element.controls}
                    muted
                  >
                    {element.src.map(({ url, type }) => (
                      <source src={url} type={type}></source>
                    ))}
                  </video>
                );
            }
          }
        }
      </div>
      {
        index > 0 && (
          <a
            class="presentation__prev"
            href={`#gallery-${prevLink}`}
            aria-label={`Return to ${prevLink}`}
          >
            <Icon
              pack="mdi"
              name="arrow-left-circle"
              class="presentation__icon"
              width="3.125rem"
              color="#ffffffcc"
              style="background:#22222299;"
              aria-hidden="true"
            />
          </a>
        )
      }
      {
        index < links.length - 1 && (
          <a
            class="presentation__next"
            href={`#gallery-${nextLink}`}
            aria-label={`Go to ${nextLink}`}
          >
            <Icon
              pack="mdi"
              name="arrow-right-circle"
              class="presentation__icon"
              width="3.125rem"
              color="#ffffffcc"
              style="background:#22222299;"
              aria-hidden="true"
            />
          </a>
        )
      }
    </div>
  </div>
</div>

<style>
  .presentation {
    display: none;
    position: fixed;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    bottom: auto;
    right: auto;
    background: linear-gradient(180deg, #55555599, #00000099);
    backdrop-filter: blur(25px);
    -webkit-backdrop-filter: blur(25px);
    z-index: 100;
  }
  .presentation:target {
    display: block;
  }
  .presentation__inner {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    overflow: hidden;
    perspective: 100px;
  }
  .presentation__asset {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    flex: 0 0 100%;
    width: 100%;
    height: 100%;
  }
  .presentation__asset > :global(picture),
  .presentation__asset > video {
    display: block;
    width: auto;
    height: auto;
    max-width: calc(100% - 20vw);
    max-height: calc(100% - 4rem);
    filter: drop-shadow(0 0 10px #0003);
  }
  .presentation__asset > :global(picture) > :global(img) {
    width: 100%;
    height: 100%;
  }
  @media (max-width: 1024px) {
    .presentation__asset > :global(picture),
    .presentation__asset > video {
      max-width: calc(100% - 3rem);
      max-height: calc(100% - 3rem);
    }
  }
  @media (max-width: 480px) {
    .presentation__asset > :global(picture),
    .presentation__asset > video {
      max-width: calc(100% - 2rem);
      max-height: calc(100% - 2rem);
    }
  }
  .presentation__close {
    position: absolute;
    left: 1.5rem;
    top: 1.5rem;
    color: #ffffffdd;
    z-index: 103;
  }
  @media (max-width: 1080px) {
    .presentation__close {
    }
  }
  .presentation__prev,
  .presentation__next {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 15vw;
    height: 100%;
    z-index: 102;
    top: auto;
    bottom: auto;
    color: #ffffffdd;
  }
  @media (max-width: 1080px) {
    .presentation__prev,
    .presentation__next {
      width: 25%;
      height: 100%;
      padding: 0 2rem;
      z-index: 101;
    }
    .presentation__prev .presentation__icon,
    .presentation__next .presentation__icon {
      opacity: 0.4;
      transition: opacity ease-in-out 0.2s;
    }
    .presentation__prev:hover .presentation__icon,
    .presentation__next:hover .presentation__icon {
      opacity: 1;
    }
    .presentation__prev {
      align-items: flex-start;
    }
    .presentation__next {
      align-items: flex-end;
    }
  }
  .presentation__prev:active {
    background: linear-gradient(90deg, #ffffff1f, transparent);
  }
  .presentation__next:active {
    background: linear-gradient(270deg, #ffffff1f, transparent);
  }
  .presentation__prev {
    left: 0;
    right: auto;
  }
  .presentation__next {
    left: auto;
    right: 0;
  }
  .presentation__icon {
    border-radius: 100%;
  }
</style>
